basePath: /api/v1
definitions:
  api.UpdatePasswordRequest:
    properties:
      current_password:
        type: string
      password:
        type: string
    required:
    - current_password
    - password
    type: object
  api.UpdateUserRequest:
    properties:
      bio:
        type: string
      current_password:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      profile_picture:
        type: string
      username:
        type: string
    required:
    - current_password
    type: object
  api.loginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  api.registeredUserRequest:
    properties:
      bio:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      profile_picture:
        type: string
      username:
        type: string
    type: object
  api.requestOTPRequest:
    properties:
      email:
        type: string
    type: object
  api.resendOTPRequest:
    properties:
      email:
        type: string
    type: object
  api.resendVerificationRequest:
    properties:
      email:
        type: string
    type: object
  api.verifyEmailRequest:
    properties:
      token:
        type: string
    type: object
  api.verifyOTPRequest:
    properties:
      email:
        type: string
      otp:
        type: string
      password:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: ChefShare API Documentation
  title: ChefShare API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns access and refresh tokens
      parameters:
      - description: User login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/api.loginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful with user info and tokens
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Invalid credentials
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User login
      tags:
      - Authentication
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Ends the current user session by revoking the refresh token
      parameters:
      - description: Refresh token to revoke
        in: body
        name: request
        required: true
        schema:
          properties:
            refresh_token:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Logout successful
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Missing refresh token
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Logout user
      tags:
      - Authentication
  /auth/me:
    get:
      description: Returns the profile of the currently authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: User information
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get current authenticated user
      tags:
      - Authentication
  /auth/password/reset/confirm:
    post:
      consumes:
      - application/json
      description: Verifies the OTP sent to user's email and resets the password (transaction-based)
      parameters:
      - description: OTP verification and new password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.verifyOTPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Password reset successful
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request or OTP
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
        "429":
          description: Rate limit exceeded
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Verify OTP and reset password
      tags:
      - Password Reset
  /auth/password/reset/request:
    post:
      consumes:
      - application/json
      description: Initiates the password reset process by sending an OTP to the user's
        email
      parameters:
      - description: Email for reset
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.requestOTPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OTP sent to email
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "429":
          description: Rate limit exceeded
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Request password reset
      tags:
      - Password Reset
  /auth/password/reset/resend:
    post:
      consumes:
      - application/json
      description: Resends the OTP to the user's email for password reset
      parameters:
      - description: Email for OTP resend
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.resendOTPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OTP resent successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "429":
          description: Rate limit exceeded
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Resend OTP
      tags:
      - Password Reset
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with the provided information
      parameters:
      - description: User Registration Info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/api.registeredUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Username or email already exists
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - Authentication
  /auth/token/refresh:
    post:
      consumes:
      - application/json
      description: Validates refresh token and issues a new access token with token
        rotation
      parameters:
      - description: Refresh token
        in: body
        name: request
        required: true
        schema:
          properties:
            refresh_token:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: New access and refresh tokens
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Invalid or expired refresh token
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Refresh JWT access token
      tags:
      - Authentication
  /auth/verify-email/confirm:
    post:
      consumes:
      - application/json
      description: Verifies a user's email address using the token sent in the verification
        email
      parameters:
      - description: Verification token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.verifyEmailRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Email verified successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Token not found
          schema:
            additionalProperties:
              type: string
            type: object
        "410":
          description: Token expired
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Verify email address
      tags:
      - Email Verification
  /auth/verify-email/request:
    post:
      description: Sends a new verification email to the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: Verification email sent
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Email already verified
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "429":
          description: Rate limit exceeded
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Request verification email (authenticated)
      tags:
      - Email Verification
  /auth/verify-email/resend:
    post:
      consumes:
      - application/json
      description: Sends a new verification email to the user
      parameters:
      - description: Email address
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.resendVerificationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Verification email sent
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
        "429":
          description: Rate limit exceeded
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Resend verification email
      tags:
      - Email Verification
  /users/me:
    put:
      consumes:
      - application/json
      description: Update the authenticated user's profile information
      parameters:
      - description: User information to update
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Username already exists
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update user profile
      tags:
      - Users
  /users/me/password:
    put:
      consumes:
      - application/json
      description: Update the authenticated user's password
      parameters:
      - description: Current and new password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.UpdatePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Password updated successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request or password requirements not met
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized or incorrect current password
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update user password
      tags:
      - Users
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and the access token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
